use robot as knowledge.
use robot as actionspec.
exit=nogoals.

module main {
    % Adopt a goal the the rooms that have not been visited yet
    if bel(room(Place), not(visited(Place))) then adopt(in(Place)).

    % When the agent is in the DropZone the try to put down a block
    if bel(in('DropZone')) then putDown.

    % Exercise 2.5a: insert code for action rules that allows an agent to systematically search for blocks.

    % Exercise 2.6a: insert code for action rules that makes the agent deliver a block when it 
    %   knows about a block that can be delivered.

    % If the agent is at a block and the color of the block is the next color in sequence and 
    % not a goal to get another block then adopt the goal to pick up the block
    if bel(atBlock(Block), nextColorInSeq(Color), color(Block, Color), not(holding(Block))), not(goal(holding(_)))
        then adopt(holding(Block)).

    % If the agent is in a room where their is a block which color is the next color in the sequence 
    % then adopt the foal to go to the block
    if bel(nextColorInSeq(Color), color(Block, Color), block(Block, Room), in(Room)), not(goal(atBlock(_)))
        then adopt(atBlock(Block)).

    % Adopt a goal to go to a room where the next color in sequence is located
    if bel(nextColorInSeq(Color), color(Block, Color), block(Block, Room),not(in(Room)))
        then adopt( in(Room) ).

    % If their is a goal to go to the Dropzone and the agent is holding something then go to the DropZone
    if a-goal(in('DropZone')), bel(holding(_))
        then goTo('DropZone').

    % If there is a goal of holding of Block the pickup the Block and adopt to goal to go to the DropZone
    if a-goal(holding(Block)) 
        then pickUp(Block) + adopt(in('DropZone')).

    % If a goal to go to a Block go to that Block
    if a-goal(atBlock(Block)) then goToBlock(Block).

    % Give priority to the room the agent already visited
    if a-goal(in(Room)), bel(visited(Room))
        then goTo(Room).

    % If the sequence index is equal to 6 then drop all goals
    if bel( sequenceIndex(X), X =:= 6 )
        then
        {
            forall goal(in(Y)) do drop(in(Y)).
        }

    % Go to the rooms that have not yet been visited
    if a-goal(in(Room)) then goTo(Room).
}
